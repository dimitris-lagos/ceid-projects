#Project for C class, that implements a simple server-client communication platform. This version is implemented using threads.

Για την εκπόνηση της ζητούμενης άσκησης χρησιμοποιήκαν 2 threads για τον ταυτόχρονο έλεγχο της πιστωτικής κάρτας και της διαθεσιμότητας θέσεων. Το νήμα που εκτελεί τον έλεγχο της πιστωτικής γίνεται join ώστε το θρεντ που πραγματοποιεί τις κρατήσεις να περιμένει την έγκριση της πιστωτικής. Για τον συγχρονισμό και τον ασφαλή έλεγχο των κρίσιμων περιοχών του κώδικα που θα χρησιμοποιούν τα νήματα χρησιμοποιήθηκαν 4 δυαδικοί σεμαφόροι(mutex) καθώς και 2 condition variables για την απελευθέρωση τηλεφωνητών και τραπεζικών σερβερ. Ο πρώτος mutex εξασφαλίζει την σωστή ενημέρωση και έλεγχο των μεταβλητών που είναι υπεύθυνες για την εξέλιξη της παραγγελίας(όπως πχ. αριθμός διαθέσιμων τηλεφωνητών, counters που δείχνουν την επόμενη ελεύθερη θέση στην κάθε ζώνη, μεταβλητές αποθήκευσης στατιστικών όπως συνολικός αριθμός πελατών, αριθμός πελατών που μπαίνει στην αναμονή κτλ.).Ο δεύτερος mutex είναι υπεύθυνος για τα δεδομένα που αφορούν την τράπεζα και τα τραπεζικά συστήματα. Ο τρίτος συγχρονίζει τα νήματα στο σημείο των κρατήσεων, ενώ ο τέταρτος την διαδικασία χρέωσης της πιστωτικής.

Για την δημιουργία κοινής μνήμης μεταξύ των νημάτων, δημιουργήσαμε μια struct για την οποία δεσμεύσαμε την απαραίτητη ποσότητα μνήμης με την χρήση της συνάρτησης malloc.

Κάθε νήμα που καλείται μετά από την accept παίρνει ως όρισμα το socket επικοινωνίας με το client και δημιουργεί δική του ξεχωριστή θέση μνήμης για να συνεχίσει την επικοινωνία, έτσι ώστε το κάθε νήμα να έχει το δικό του socket. Παράλληλα καλείται η detach για την απελευθέρωση των πόρων που απασχολούν τα νήματα μετά το τέλος της χρήσης τους.

Η σύνδεση client στον server δημιουργεί νέο νήμα στον server, ο οποίος ξεκινάει αναζήτηση ελεύθερου τηλεφωνητή. Αν αυτός βρεθεί τότε ενημερώνει τον client ότι μπορεί να προχωρήσει. Σε αντίθετη περίπτωση, ο client μπάινει σε διαδικασία αναμονής και στο τερματικό του εμφανίζεται ανάλογο μήνυμα κάθε 10 δεύτερα. Ταυτόχρονα ο client περιμένει το επόμενο μήνυμα ώστε να βγεί από την αναμονή. Το μήνυμα αυτό προκύπτει μετά από συνεχή έλεγχο του server μέχρι να βρεθεί διαθέσιμος τηλεφωνητής. O παραπάνω έλεγχος γίνεται πλέον με condition variable (cond_thl), όπου όταν ένα νήμα βγει από την κρίσιμη περιοχή στέλνει σήμα ενημερώνοντας τα νήματα που περιμένουν για διαθέσιμο τηλεφωνητή, ότι ένα από αυτά μπορεί να γίνει unblock και να περάσει στην κρίσιμη περιοχή καθώς απελευθερώθηκε τηλεφωνητής.

Στο επόμενο βήμα ο server εκτελεί έλεγχο για το αν υπάρχουν ελεύθερες θέσεις και ενημερώνει τον client είτε για είσοδο δεδομένων από τον χρήστη, είτε αν είναι όλες κλεισμένες να κλείσει το πρόγραμμα με το αντίστοιχο μήνυμα.

Στη συνέχεια εκτελείται έλεγχος μέχρι να βρεθεί διαθέσιμο τραπεζικό σύστημα. Πάλι εδώ έχουμε condition variable(cond_bank), όπου όταν κάποιο νήμα δεν χρειάζεται πια το τραπεζικό σύστημα, στέλνει σήμα το οποίο κάνει unblock ένα από τα νήματα τα οποία βρίσκονταν σε αναμονή διαθέσιμου τραπεζικού συστήματος. Μόλις βρεθεί γίνεται έλεγχος της πιστωτικής κάρτας και παράλληλα εκτελείται έλεγχος για να βρεθεί αν υπάρχουν διαθέσιμες θέσεις στην ζώνη που ζήτησε ο πελάτης. Αν η πιστωτική κάρτα δεν είναι έγκυρη ή αν δεν υπάρχουν ελεύθερες θέσεις στην επιλεγμένη ζώνη ενημερώνεται ανάλογα ο client και κλείνει τυπώνοντας το αντίστοιχο μήνυμα. Αλλιώς πραγματοποιεί την κράτηση αποθηκεύοντας παράλληλα το όνομα του πελάτη στις θέσεις ενός πίνακα που αντιστοιχούν στις θέσεις του θεάτρου που έχει κάνει κράτηση ο πελάτης.

Τέλος αποθηκεύονται τα δεδομένα που χρειάζονται για να εκτυπωθούν κατά την έξοδο του προγράμματος τα στατιστικά και στον client τυπώνονται τα ζητούμενα στοιχεία. Παράλληλα τρέχει και ένα σήμα το οποίο κάθε 30 δεύτερα μεταφέρει τα λεφτά που έχουν συγκεντρωθεί από τις κρατήσεις, στον τραπεζικό λογαριασμό του θεάτρου.

Για να μπορεί να εκτελεστεί το πρόγραμμα client θα πρέπει να πάρει ένα αριθμητικό όρισμα. Αν το όρισμα αυτό είναι μηδέν, τότε η εισαγωγή στοιχείων γίνεται από τον χρήστη μέσω της κονσόλας. Αν το αριθμητικό είναι μεγαλύτερο του μηδενός και μέχρι 3 ψηφία τότε το πρόγραμμα δίνει αυτόματα τιμές στα στοιχεία της παραγγελίας μέσω συναρτήσεων rand. Παράλληλα μετατρέπει το αριθμητικό όρισμα σε όνομα πελάτη, αφού πρώτα του προσθέσει το γράμμα P σαν πρώτο ψηφίο. Το P συμβολίζει το πρώτο γράμμα της λέξης Pelatis.
Πχ.
./client 0 //η εκτέλεση θα πραγματοποιηθεί με είσοδο δεδομένων από την κονσόλα
./client 15 //το πρόγραμμα θα δώσει τυχαία στοιχεία, αλλά το όνομα του πελάτη θα είναι P15
Χωρίς όρισμα δεν εκτελείται το πρόγραμμα client!!!

Για την εκτύπωση των αποτελεσμάτων καλείται ο χειριστής του server να τον κλείσει με τον συνδυασμό Cntrl + C , ώστε να εκτυπωθούν τα τελικά στοιχεία.
