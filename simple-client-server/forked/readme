#This C projects implements a simple server-client oriented communication platform using the fork method.

	Για την εκπόνηση της ζητούμενης άσκησης χρησιμοποιήκαν 2 sockets για την επικοινωνία server/client και 2 σημαφόροι για τον συνχρονισμό και τον ασφαλή έλεγχο της κοινής μνήμης που θα χρησιμοποιούν τα instance του server καθώς και τα child process των τραπεζικών μηχανημάτων, μέσω της κλήσης της συνάρτηση fork. Ο πρώτος σημαφόρος εξασφαλίζει την σωστή ενημέρωση και έλεγχο των μεταβλητών που είναι υπεύθυνες για την εξέλιξη της παραγγελίας(όπως πχ. αριθμός διαθέσιμων τηλεφωνητών, counters που δείχνουν την επόμενη ελεύθερη θέση στην κάθε ζώνη, μεταβλητές αποθήκευσης στατιστικών όπως συνολικός αριθμός πελατών, αριθμός πελατών που μπαίνει στην αναμονή κτλ.).Ο δεύτερος σημαφόρος είναι υπεύθυνος για τα δεδομένα που αφορούν την τράπεζα και τους τραπεζικά συστήματα. 
	Για να γίνονται ταυτόχρονοι έλεγχοι τόσο για διαθέσιμες θέσεις όσο και για έλεγχο της πιστωτικής κάρτας, ο έλεγχος της πιστωτικής κάρτας μπήκε σε μια δεύτερη fork, ώστε να τρέχει παράλληλα με τον έλεγχο τον θέσεων. Ο έλεγχος αυτός κάνει χρήση του δεύτερου σημαφόρου ενώ ο έλεγχος για ελεύθερες θέσεις κάνει χρήση του πρώτου. Έτσι εξασφαλίζουμε ότι δεν θα επηρεάζει η προσπέλαση της κοινής μνήμης τις ουρές εξυπηρέτησης των τηλεφωνητών και  των τραπεζικών συστημάτων.
	
	Η σύνδεση client στον server  δημιουργεί νέα διεργασία στον server, η οποία ξεκινάει αναζήτηση ελεύθερου τηλεφωνητή. Αν αυτός βρεθεί τότε ενημερώνει τον client ότι μπορεί να προχωρήσει.  Σε αντίθετη περίπτωση, ο client μπάινει σε διαδικασία αναμονής και στο τερματικό του εμφανίζεται ανάλογο μήνυμα κάθε 10 δεύτερα.  Ταυτόχρονα ο client περιμένει το επόμενο μήνυμα ώστε να βγεί από την αναμονή.  Το μήνυμα αυτό προκύπτει μετά από συνεχή έλεγχο του server μέχρι να βρεθεί διαθέσιμος τηλεφωνητής.
	Στο επόμενο βήμα ο server εκτελεί έλεγχο για το αν υπάρχουν ελεύθερες θέσεις και ενημερώνει τον client είτε για είσοδο δεδομένων από τον χρήστη, είτε αν είναι όλες κλεισμένες να κλείσει το πρόγραμμα με το αντίστοιχο μήνυμα.
	Στη συνέχεια εκτελείται έλεγχος μέχρι να βρεθεί διαθέσιμο τραπεζικό σύστημα. Μόλις βρεθεί γίνεται έλεγχος της πιστωτικής κάρτας και παράλληλα εκτελείται έλεγχος για να βρεθεί αν υπάρχουν διαθέσιμες θέσεις στην ζώνη που ζήτησε ο πελάτης. Αν η πιστωτική κάρτα δεν είναι έγκυρη ή αν δεν υπάρχουν ελεύθερες θέσεις  στην επιλεγμένη ζώνη ενημερώνεται ανάλογα ο client και κλείνει τυπώνοντας το αντίστοιχο μήνυμα. Αλλιώς πραγματοποιεί την κράτηση αποθηκεύοντας παράλληλα το όνομα του πελάτη στις θέσεις ενός πίνακα που αντιστοιχούν στις θέσεις του θεάτρου που έχει κάνει κράτηση ο πελάτης.
	Τέλος αποθηκεύονται τα δεδομένα που χρειάζονται για να εκτυπωθούν κατά την έξοδο του προγράμματος  τα στατιστικά και στον client τυπώνονται τα ζητούμενα στοιχεία. Παράλληλα τρέχει και ένα σήμα το οποίο κάθε 30 δεύτερα  μεταφέρει τα λεφτά που έχουν συγκεντρωθεί από τις κρατήσεις, στον τραπεζικό λογαριασμό του θεάτρου.

	
	Για να μπορεί να εκτελεστεί το πρόγραμμα client θα πρέπει να πάρει ένα αριθμητικό όρισμα. Αν το όρισμα αυτό είναι μηδέν, τότε η εισαγωγή στοιχείων γίνεται από τον χρήστη μέσω της κονσόλας. Αν το αριθμητικό είναι μεγαλύτερο του μηδενός και μέχρι 3 ψηφία τότε το πρόγραμμα δίνει αυτόματα τιμές στα στοιχεία της παραγγελίας μέσω συναρτήσεων rand. Παράλληλα μετατρέπει το αριθμητικό όρισμα σε όνομα πελάτη, αφού πρώτα του προσθέσει το γράμμα P σαν πρώτο ψηφίο. Το P συμβολίζει το πρώτο γράμμα της λέξης Pelatis.
	Πχ.
	./client 0  //η εκτέλεση θα πραγματοποιηθεί με είσοδο δεδομένων από                                          την   κονσόλα

./client 15  //το πρόγραμμα θα δώσει τυχαία στοιχεία, αλλά το όνομα του πελάτη  θα είναι P15
	Χωρίς όρισμα δεν εκτελείται το πρόγραμμα client!!!
Για την εκτύπωση των αποτελεσμάτων καλείται ο χειριστής του server να τον κλείσει με τον συνδυασμό Cntrl + C , ώστε να εκτυπωθούν τα τελικά στοιχεία.
